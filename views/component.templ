package views

import (
    "fmt"
	"github.com/AngelVI13/foos/game"
	"github.com/AngelVI13/foos/routes"
)


templ InlineEditBtn(url string) {
<a class="m-1 link-warning" hx-get={url} hx-trigger="click" hx-target="closest tr" hx-swap="outerHTML">
    @EditIcon()
</a>
}

templ InlineSaveBtn(url string) {
<a class="m-1 link-success" hx-put={url} hx-exc="json-enc" hx-trigger="click" hx-include="closest tr" hx-target="closest tr" hx-swap="outerHTML"> 
    @ConfirmIcon()
</a>
}

templ InlineCancelBtn(url string) {
<a class="m-1 link-danger" hx-get={url} hx-trigger="click" hx-target="closest tr" hx-swap="outerHTML">
    @CancelIcon()
</a>
}


templ Rounds(rounds game.Rounds) {
    for _, round := range rounds.All {
        @Bracket(round)
    }

    @Standings(rounds.Teams)
}

templ TeamRow(team *game.Team, url string) {
<tr>
    <td>{ team.String() }</td>
    <td>{ fmt.Sprintf("%d", team.Score()) }</td>
    if team.Player1 != game.TBD {
        <td>@InlineEditBtn(url)</td>
    }
</tr>
}

templ TeamRowUpdate(teamName, url string, value int) {
<tr>
    <td>{ teamName }</td>
    <td> <input id="scoreUpdate" class="form-control" value={fmt.Sprint(value)} type="text" name="score" maxlength="2" size="2" /> </td>
    <td>
        @InlineSaveBtn(url)
        @InlineCancelBtn(url)
    </td>
</tr>
}

templ Standings(teams []*game.Team) {
<div class="column">
    <h3>Standings</h3>
    <table class="table table-hover table-dark table-border table-responsive w-50">
        <thead>
            <td>#</td>
            <td>Name</td>
            <td>Score</td>
        </thead>
        <tbody>
            <!-- TODO: fix standings to be sorted based on scores -->
            for i, team := range teams {
                <tr>
                    <td>{ fmt.Sprintf("%d", (i*2)+1) }</td>
                    <td>{ team.Player1 }</td>
                    <td>{ fmt.Sprintf("%d", team.AllScores()) }</td>
                </tr>
                <tr>
                    <td>{ fmt.Sprintf("%d", (i*2)+2) }</td>
                    <td>{ team.Player2 }</td>
                    <td>{ fmt.Sprintf("%d", team.AllScores()) }</td>
                </tr>
            }
        </tbody>
    </table>
</div>
}

templ Bracket(round game.Round) {
<div class="column">
    <h3>{ round.Name }</h3>
    for _, match := range round.Matches {
    <table class="table table-hover table-dark table-border table-responsive w-75">
        <tbody>
            for i, team := range match.Teams() {
                @TeamRow(team, routes.MakeMatchUpdateUrl(&match, i+1))
            }
        </tbody>
    </table>
    }
</div>
}


